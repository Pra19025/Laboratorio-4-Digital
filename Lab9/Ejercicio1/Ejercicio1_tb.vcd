$date
	Sat Oct 31 10:32:51 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! Q3 [3:0] $end
$var wire 2 " Q2 [1:0] $end
$var wire 1 # Q $end
$var reg 1 $ D $end
$var reg 2 % D2 [1:0] $end
$var reg 4 & D3 [3:0] $end
$var reg 1 ' clk $end
$var reg 1 ( enable $end
$var reg 1 ) reset $end
$scope module F1 $end
$var wire 1 $ D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 # Q $end
$upscope $end
$scope module F2 $end
$var wire 2 * D2 [1:0] $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var wire 2 + Q2 [1:0] $end
$scope module FFDA $end
$var wire 1 , D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 - Q $end
$upscope $end
$scope module FFDB $end
$var wire 1 . D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 / Q $end
$upscope $end
$upscope $end
$scope module F3 $end
$var wire 4 0 D3 [3:0] $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var wire 4 1 Q3 [3:0] $end
$scope module FFD2A $end
$var wire 2 2 D2 [1:0] $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var wire 2 3 Q2 [1:0] $end
$scope module FFDA $end
$var wire 1 4 D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 5 Q $end
$upscope $end
$scope module FFDB $end
$var wire 1 6 D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 7 Q $end
$upscope $end
$upscope $end
$scope module FFD2B $end
$var wire 2 8 D2 [1:0] $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var wire 2 9 Q2 [1:0] $end
$scope module FFDA $end
$var wire 1 : D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 ; Q $end
$upscope $end
$scope module FFDB $end
$var wire 1 < D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 ) reset $end
$var reg 1 = Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
x<
x;
x:
bx 9
bx 8
x7
x6
x5
x4
bx 3
bx 2
bx 1
bx 0
x/
x.
x-
x,
bx +
bx *
0)
x(
1'
bx &
bx %
x$
x#
bx "
bx !
$end
#1
0'
#2
0=
b0 9
0;
07
b0 !
b0 1
b0 3
05
0/
b0 "
b0 +
0-
0#
1'
1)
#3
0'
#4
x#
x-
bx "
bx +
x/
x5
bx 3
x7
x;
bx !
bx 1
bx 9
x=
1'
0)
#5
0'
#6
1'
0(
#7
0'
#8
1'
1(
#9
0'
#10
0/
b0 "
b0 +
0-
0#
04
06
0:
0<
b0 2
b0 8
0,
0.
1'
b0 &
b0 0
b0 %
b0 *
0$
#11
0'
#12
05
b0 3
07
0;
b0 !
b0 1
b0 9
0=
14
1:
b1 2
b1 8
1.
1'
1)
b101 &
b101 0
b10 %
b10 *
1$
#13
0'
0)
#14
b1 9
1;
b101 !
b101 1
b1 3
15
b10 "
b10 +
1/
1#
1'
#15
0'
#16
1'
#17
0'
#18
1'
#19
0'
#20
1'
#21
0'
#22
1'
#23
0'
#24
1'
#25
0'
#26
1'
#27
0'
#28
1'
#29
0'
#30
1'
#31
0'
#32
1'
#33
0'
#34
1'
#35
0'
#36
1'
#37
0'
#38
1'
#39
0'
#40
1'
#41
0'
#42
1'
#43
0'
#44
1'
#45
0'
#46
1'
#47
0'
#48
1'
#49
0'
#50
1'
#51
0'
#52
1'
#53
0'
#54
1'
#55
0'
#56
1'
#57
0'
#58
1'
#59
0'
#60
1'
#61
0'
#62
1'
#63
0'
0(
#64
1'
#65
04
1<
b0 2
b11 8
0.
0'
b1100 &
b1100 0
b0 %
b0 *
0$
#66
1'
#67
0'
#68
1'
#69
0'
#70
1'
#71
0'
#72
1'
#73
0'
#74
1'
#75
0'
#76
1'
#77
0'
#78
1'
#79
0'
#80
1'
#81
0'
#82
1'
#83
0'
#84
1'
#85
0'
#86
1'
#87
0'
#88
1'
#89
0'
#90
1'
#91
0'
#92
1'
#93
0'
#94
1'
#95
0'
#96
1'
#97
0'
#98
1'
#99
0'
#100
1'
#101
0'
#102
1'
#103
0'
#104
1'
#105
0'
#106
1'
#107
0'
#108
1'
#109
0'
#110
1'
#111
0'
#112
1'
#113
0'
#114
1'
#115
0'
